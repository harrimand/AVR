;Darrell Harriman
;Testing AVR download

.nolist
.include "M328Pdef.inc"
.list

.def	TEMP = R16
.def	TEMP2 = R17
.def	COUNT = R18
.def	kitSource = R25
.def	kit = R24
;.def	kitL = R23

.ORG	$0000
		rjmp	RESET
.ORG	OVF0addr
		rjmp	ReadTable
.ORG	INT_VECTORS_SIZE

RESET:
		ldi 	TEMP, high(RAMEND)  ; Stack pointer at RAMEND
		out		SPH, TEMP
		ldi 	TEMP, low(RAMEND)
		out		SPL, TEMP

		ser 	TEMP 		;PORTB all pins output
		out 	DDRB, TEMP

		clr 	COUNT

		clr		TEMP
		mov		kit, TEMP

		ldi		ZH, high(DATA)
		ldi		ZL, low(DATA)
		ldi		YH, high(DATAend)
		ldi		YL, low(DATAend)

		ldi 	TEMP, (1<<TOIE0)  ; Timer 0 Overflow Interrupt Enable
		sts  	TIMSK0, TEMP

		ldi 	TEMP, (1<<CS02)|(0<<CS01)|(1<<CS00)  ; MCUclk / 1024
		out 	TCCR0B, TEMP

		ldi 	TEMP, (1<<SE)  ; Sleep mode 0 (Idle) enabled.
		out 	SMCR, TEMP

		sei

MAIN:
		nop
		nop
		sleep   ; Sleep and wait for interrupt to wake up
		nop
		rjmp	MAIN

T0ovf:  ;Interrupt Service Routine
		ldi		TEMP, $80
		out		TCNT0, TEMP 
		inc 	COUNT
		out 	PORTB, COUNT
		reti


KitFun:
		push	TEMP
		ldi		TEMP, $C0
		out		TCNT0, TEMP
		tst		kit
		brne	noInit
		ser		kitSource
		in		TEMP, GPIOR0
		ldi		TEMP2, $01
		eor		TEMP, TEMP2
		out		GPIOR0, TEMP
		ser		kitSource
noInit:
		in		TEMP, GPIOR0
		sbrs	TEMP, 0
		rjmp	ShiftRight
		rol		kitSource
		rol		kit
		rjmp Return
ShiftRight:
		ror		kitSource
		ror		kit
Return:
		out		PORTB, kit
		pop		TEMP
		reti

ReadTable:
		lpm		TEMP, Z+
		cp		ZL, YL
		cpc		ZH, YH
		breq	NotEnd
		ldi		ZH, high(DATA)
		ldi		ZL, low(DATA)
NotEnd:
		out		PORTB, TEMP
		reti


ProgEnd:
.ORG ProgEnd + 0x40 - (ProgEnd + 0x40) % 0x10
DATA:
.db    0x18, 0x3c, 0x7e, 0xff, 0xff, 0xe7, 0xc3, 0x81
.db    0x80, 0x81, 0xc1, 0xc3, 0xe3, 0xe7, 0xf7
.db    0x7f, 0x7e, 0x3e, 0x3c, 0x1c, 0x18, 0x8 
.db    0x80, 0x40, 0x20, 0x10, 0x8, 0x4, 0x2
.db    0x43, 0x23, 0x13, 0xb, 0x7, 0x87, 0x47
.db    0x17, 0xf, 0x8f, 0x4f, 0x2f, 0x1f, 0x9f
.db    0x3f, 0xbf, 0x7f, 0xff, 0xfe, 0xfd, 0xfc
.db    0xf9, 0xf8, 0xf4, 0xf2, 0xf1, 0xf0, 0xe8
.db    0xe2, 0xe1, 0xe0, 0xd0, 0xc8, 0xc4, 0xc2
.db    0xc0, 0xa0, 0x90, 0x88, 0x84, 0x82, 0x81
.db    0x40, 0x20, 0x10, 0x8, 0x4, 0x2, 0x1
.db    0xff, 0x0, 0xff, 0x0, 0xff, 0x0, 0xff
.db    0x7f, 0xbf, 0xdf, 0xef, 0xf7, 0xfb, 0xfd
.db    0x7e, 0xbe, 0xde, 0xee, 0xf6, 0xfa, 0xfc
.db    0xbc, 0xdc, 0xec, 0xf4, 0xf8, 0x78, 0xb8
.db    0xe8, 0xf0, 0x70, 0xb0, 0xd0, 0xe0, 0x60
.db    0xc0, 0x40, 0x80, 0x0, 0x0, 0x0, 0xff
.db    0x18, 0xc3, 0x42, 0x66, 0xe7, 0xa5, 0x24
.db    0xbd, 0xff, 0x7e, 0x5a, 0xdb, 0x99, 0x18
.db    0x66, 0x99, 0x66, 0x99, 0x66, 0x99, 0xff
.db    0x7e, 0xbd, 0xdb, 0xe7, 0x66, 0xa5, 0xc3
.db    0x81, 0x0
DATAend:
